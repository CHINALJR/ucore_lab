diff -r -u -P ../../origin/labcodes/lab7/.badarg.log lab7/.badarg.log
--- ../../origin/labcodes/lab7/.badarg.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.badarg.log	2020-05-28 23:47:56.059298032 +0800
@@ -0,0 +1,211 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "badarg".
+fork ok.
+badarg pass.
+Iter 1, No.0 philosopher_condvar is eating
+Iter 1, No.1 philosopher_condvar is eating
+Iter 1, No.2 philosopher_condvar is eating
+Iter 1, No.3 philosopher_condvar is eating
+Iter 1, No.4 philosopher_condvar is eating
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+Iter 2, No.1 philosopher_condvar is eating
+Iter 2, No.2 philosopher_condvar is eating
+Iter 2, No.3 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+Iter 2, No.0 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+Iter 3, No.1 philosopher_condvar is eating
+Iter 3, No.2 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is eating
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+Iter 3, No.0 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 4, No.1 philosopher_condvar is eating
+Iter 4, No.2 philosopher_condvar is eating
+Iter 4, No.3 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is eating
+Iter 4, No.3 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 4, No.0 philosopher_condvar is eating
+No.4 philosopher_condvar quit
+No.3 philosopher_condvar quit
+No.2 philosopher_condvar quit
+No.1 philosopher_condvar quit
+No.0 philosopher_condvar quit
+No.2 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+No.3 philosopher_sema quit
+Iter 1, No.4 philosopher_sema is eating
+No.1 philosopher_sema quit
+Iter 2, No.4 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+Iter 3, No.4 philosopher_sema is thinking
+Iter 3, No.4 philosopher_sema is eating
+Iter 4, No.4 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+kernel panic at kern/process/proc.c:482:
+    initproc exit.
+
+stack trackback:
+ebp:0xc03aaf88 eip:0xc0100af0 args:0xc010d9e4 0xc03aafcc 0x000001e2 0xc03aafb8 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03aafb8 eip:0xc0100e50 args:0xc010fc64 0x000001e2 0xc010fc88 0x00000000 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03aafe8 eip:0xc010af18 args:0x00000000 0x00000000 0x00000000 0x00000010 
+    kern/process/proc.c:482: do_exit+91
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
diff -r -u -P ../../origin/labcodes/lab7/.badsegment.log lab7/.badsegment.log
--- ../../origin/labcodes/lab7/.badsegment.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.badsegment.log	2020-05-28 23:47:31.031298032 +0800
@@ -0,0 +1,230 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "badsegment".
+trapframe at 0xc03b1fb4
+  edi  0x00000000
+  esi  0x00000000
+  ebp  0xafffffa8
+  oesp 0xc03b1fd4
+  ebx  0x00000000
+  edx  0x00000000
+  ecx  0x00000000
+  eax  0x00000028
+  ds   0x----0023
+  es   0x----0023
+  fs   0x----0000
+  gs   0x----0000
+  trap 0x0000000d General Protection
+  err  0x00000028
+  eip  0x0080101b
+  cs   0x----001b
+  flag 0x00000286 PF,SF,IF,IOPL=0
+  esp  0xafffff90
+  ss   0x----0023
+unhandled trap.
+Iter 1, No.4 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+Iter 1, No.1 philosopher_condvar is eating
+Iter 1, No.2 philosopher_condvar is eating
+Iter 1, No.3 philosopher_condvar is eating
+Iter 1, No.4 philosopher_condvar is eating
+Iter 1, No.1 philosopher_sema is eating
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.4 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 1, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 1, No.2 philosopher_sema is eating
+Iter 2, No.0 philosopher_condvar is eating
+Iter 2, No.1 philosopher_condvar is eating
+Iter 2, No.2 philosopher_condvar is eating
+Iter 2, No.3 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.2 philosopher_condvar is eating
+Iter 3, No.1 philosopher_condvar is eating
+Iter 3, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 3, No.0 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_sema is thinking
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 4, No.2 philosopher_condvar is eating
+Iter 4, No.1 philosopher_condvar is eating
+Iter 4, No.0 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.3 philosopher_condvar is eating
+Iter 4, No.4 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+Iter 4, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+No.3 philosopher_condvar quit
+No.4 philosopher_condvar quit
+No.0 philosopher_condvar quit
+No.1 philosopher_condvar quit
+No.2 philosopher_condvar quit
+Iter 4, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+Iter 4, No.2 philosopher_sema is thinking
+Iter 4, No.1 philosopher_sema is eating
+No.4 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.3 philosopher_sema quit
+No.1 philosopher_sema quit
+Iter 4, No.2 philosopher_sema is eating
+Iter 4, No.0 philosopher_sema is eating
+No.0 philosopher_sema quit
+No.2 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+kernel panic at kern/process/proc.c:482:
+    initproc exit.
+
+stack trackback:
+ebp:0xc03aaf88 eip:0xc0100af0 args:0xc010d9e4 0xc03aafcc 0x000001e2 0xc03aafb8 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03aafb8 eip:0xc0100e50 args:0xc010fc64 0x000001e2 0xc010fc88 0x00000000 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03aafe8 eip:0xc010af18 args:0x00000000 0x00000000 0x00000000 0x00000010 
+    kern/process/proc.c:482: do_exit+91
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
diff -r -u -P ../../origin/labcodes/lab7/.divzero.log lab7/.divzero.log
--- ../../origin/labcodes/lab7/.divzero.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.divzero.log	2020-05-28 23:47:33.951298032 +0800
@@ -0,0 +1,230 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "divzero".
+trapframe at 0xc03b1fb4
+  edi  0x00000000
+  esi  0x00000000
+  ebp  0xafffffa8
+  oesp 0xc03b1fd4
+  ebx  0x00000000
+  edx  0x00000000
+  ecx  0x00000000
+  eax  0x00000001
+  ds   0x----0023
+  es   0x----0023
+  fs   0x----0000
+  gs   0x----0000
+  trap 0x00000000 Divide error
+  err  0x00000000
+  eip  0x00801023
+  cs   0x----001b
+  flag 0x00000286 PF,SF,IF,IOPL=0
+  esp  0xafffff90
+  ss   0x----0023
+unhandled trap.
+Iter 1, No.4 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+Iter 1, No.1 philosopher_condvar is eating
+Iter 1, No.2 philosopher_condvar is eating
+Iter 1, No.3 philosopher_condvar is eating
+Iter 1, No.4 philosopher_condvar is eating
+Iter 1, No.1 philosopher_sema is eating
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.4 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 1, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 1, No.2 philosopher_sema is eating
+Iter 2, No.0 philosopher_condvar is eating
+Iter 2, No.1 philosopher_condvar is eating
+Iter 2, No.2 philosopher_condvar is eating
+Iter 2, No.3 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.2 philosopher_condvar is eating
+Iter 3, No.1 philosopher_condvar is eating
+Iter 3, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 3, No.0 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_sema is thinking
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 4, No.2 philosopher_condvar is eating
+Iter 4, No.1 philosopher_condvar is eating
+Iter 4, No.0 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.3 philosopher_condvar is eating
+Iter 4, No.4 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+Iter 4, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+No.3 philosopher_condvar quit
+No.4 philosopher_condvar quit
+No.0 philosopher_condvar quit
+No.1 philosopher_condvar quit
+No.2 philosopher_condvar quit
+Iter 4, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+Iter 4, No.2 philosopher_sema is thinking
+Iter 4, No.1 philosopher_sema is eating
+No.4 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.1 philosopher_sema quit
+Iter 4, No.0 philosopher_sema is eating
+No.3 philosopher_sema quit
+Iter 4, No.2 philosopher_sema is eating
+No.0 philosopher_sema quit
+No.2 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+kernel panic at kern/process/proc.c:482:
+    initproc exit.
+
+stack trackback:
+ebp:0xc03aaf88 eip:0xc0100af0 args:0xc010d9e4 0xc03aafcc 0x000001e2 0xc03aafb8 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03aafb8 eip:0xc0100e50 args:0xc010fc64 0x000001e2 0xc010fc88 0x00000000 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03aafe8 eip:0xc010af18 args:0x00000000 0x00000000 0x00000000 0x00000010 
+    kern/process/proc.c:482: do_exit+91
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
diff -r -u -P ../../origin/labcodes/lab7/.exit.log lab7/.exit.log
--- ../../origin/labcodes/lab7/.exit.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.exit.log	2020-05-28 23:47:58.955298032 +0800
@@ -0,0 +1,216 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "exit".
+I am the parent. Forking the child...
+I am parent, fork a child pid 13
+I am the parent, waiting now..
+I am the child.
+waitpid 13 ok.
+exit pass.
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+Iter 1, No.1 philosopher_condvar is eating
+Iter 1, No.2 philosopher_condvar is eating
+Iter 1, No.3 philosopher_condvar is eating
+Iter 1, No.4 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.4 philosopher_sema is thinking
+Iter 1, No.0 philosopher_sema is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+Iter 2, No.0 philosopher_condvar is eating
+Iter 2, No.1 philosopher_condvar is eating
+Iter 2, No.2 philosopher_condvar is eating
+Iter 2, No.3 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 3, No.2 philosopher_condvar is eating
+Iter 3, No.1 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 3, No.3 philosopher_sema is thinking
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is eating
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+Iter 4, No.2 philosopher_condvar is eating
+Iter 4, No.1 philosopher_condvar is eating
+Iter 4, No.0 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.3 philosopher_condvar is eating
+Iter 4, No.4 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+No.3 philosopher_condvar quit
+No.4 philosopher_condvar quit
+No.0 philosopher_condvar quit
+No.1 philosopher_condvar quit
+No.2 philosopher_condvar quit
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 4, No.3 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+No.4 philosopher_sema quit
+Iter 4, No.0 philosopher_sema is eating
+No.2 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+No.3 philosopher_sema quit
+No.1 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+kernel panic at kern/process/proc.c:482:
+    initproc exit.
+
+stack trackback:
+ebp:0xc03aaf88 eip:0xc0100af0 args:0xc010d9e4 0xc03aafcc 0x000001e2 0xc03aafb8 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03aafb8 eip:0xc0100e50 args:0xc010fc64 0x000001e2 0xc010fc88 0x00000000 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03aafe8 eip:0xc010af18 args:0x00000000 0x00000000 0x00000000 0x00000010 
+    kern/process/proc.c:482: do_exit+91
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P ../../origin/labcodes/lab7/.faultreadkernel.log lab7/.faultreadkernel.log
--- ../../origin/labcodes/lab7/.faultreadkernel.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.faultreadkernel.log	2020-05-28 23:47:41.047298032 +0800
@@ -0,0 +1,156 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "faultreadkernel".
+not valid addr fac00000, and  can not find it in vma
+trapframe at 0xc03b1fb4
+  edi  0x00000000
+  esi  0x00000000
+  ebp  0xafffffa8
+  oesp 0xc03b1fd4
+  ebx  0x00000000
+  edx  0x00000000
+  ecx  0x00000000
+  eax  0xfac00000
+  ds   0x----0023
+  es   0x----0023
+  fs   0x----0000
+  gs   0x----0000
+  trap 0x0000000e Page Fault
+  err  0x00000005
+  eip  0x0080101c
+  cs   0x----001b
+  flag 0x00000286 PF,SF,IF,IOPL=0
+  esp  0xafffff90
+  ss   0x----0023
+killed by kernel.
+kernel panic at kern/trap/trap.c:211:
+    handle user mode pgfault failed. ret=-3
+
+stack trackback:
+ebp:0xc03b1f18 eip:0xc0100af0 args:0xc010d9e4 0xc03b1f5c 0x000000d3 0x00000002 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03b1f48 eip:0xc0100e50 args:0xc010db8e 0x000000d3 0xc010de30 0xfffffffd 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03b1f78 eip:0xc01028f4 args:0xc03b1fb4 0x00000000 0x00800020 0x0000001b 
+    kern/trap/trap.c:211: trap_dispatch+289
+ebp:0xc03b1fa8 eip:0xc0102a48 args:0xc03b1fb4 0x00000000 0x00000000 0xafffffa8 
+    kern/trap/trap.c:296: trap+74
+ebp:0xafffffa8 eip:0xc0102a9d args:0x00000000 0x00000000 0x00000000 0x00000000 
+    kern/trap/trapentry.S:24: <unknown>+0
+ebp:0xafffffd8 eip:0x008003ca args:0x00000000 0x00000000 0x00000000 0x00000000 
+    user/libs/umain.c:7: umain+10
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P ../../origin/labcodes/lab7/.faultread.log lab7/.faultread.log
--- ../../origin/labcodes/lab7/.faultread.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.faultread.log	2020-05-28 23:47:39.187298032 +0800
@@ -0,0 +1,156 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "faultread".
+not valid addr 0, and  can not find it in vma
+trapframe at 0xc03b1fb4
+  edi  0x00000000
+  esi  0x00000000
+  ebp  0xafffffa8
+  oesp 0xc03b1fd4
+  ebx  0x00000000
+  edx  0x00000000
+  ecx  0x00000000
+  eax  0x00000000
+  ds   0x----0023
+  es   0x----0023
+  fs   0x----0000
+  gs   0x----0000
+  trap 0x0000000e Page Fault
+  err  0x00000004
+  eip  0x0080101c
+  cs   0x----001b
+  flag 0x00000286 PF,SF,IF,IOPL=0
+  esp  0xafffff90
+  ss   0x----0023
+killed by kernel.
+kernel panic at kern/trap/trap.c:211:
+    handle user mode pgfault failed. ret=-3
+
+stack trackback:
+ebp:0xc03b1f18 eip:0xc0100af0 args:0xc010d9e4 0xc03b1f5c 0x000000d3 0x00000002 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03b1f48 eip:0xc0100e50 args:0xc010db8e 0x000000d3 0xc010de30 0xfffffffd 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03b1f78 eip:0xc01028f4 args:0xc03b1fb4 0x00000000 0x00800020 0x0000001b 
+    kern/trap/trap.c:211: trap_dispatch+289
+ebp:0xc03b1fa8 eip:0xc0102a48 args:0xc03b1fb4 0x00000000 0x00000000 0xafffffa8 
+    kern/trap/trap.c:296: trap+74
+ebp:0xafffffa8 eip:0xc0102a9d args:0x00000000 0x00000000 0x00000000 0x00000000 
+    kern/trap/trapentry.S:24: <unknown>+0
+ebp:0xafffffd8 eip:0x008003ca args:0x00000000 0x00000000 0x00000000 0x00000000 
+    user/libs/umain.c:7: umain+10
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P ../../origin/labcodes/lab7/.forktest.log lab7/.forktest.log
--- ../../origin/labcodes/lab7/.forktest.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.forktest.log	2020-05-28 23:48:09.315298032 +0800
@@ -0,0 +1,242 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "forktest".
+I am child 31
+I am child 30
+I am child 29
+I am child 28
+I am child 27
+I am child 26
+I am child 25
+I am child 24
+I am child 23
+I am child 22
+I am child 21
+I am child 20
+I am child 19
+I am child 18
+I am child 17
+I am child 16
+I am child 15
+I am child 14
+I am child 13
+I am child 12
+I am child 11
+I am child 10
+I am child 9
+I am child 8
+I am child 7
+I am child 6
+I am child 5
+I am child 4
+I am child 3
+I am child 2
+I am child 1
+I am child 0
+forktest pass.
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+Iter 1, No.1 philosopher_condvar is eating
+Iter 1, No.2 philosopher_condvar is eating
+Iter 1, No.3 philosopher_condvar is eating
+Iter 1, No.4 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.4 philosopher_sema is thinking
+Iter 1, No.0 philosopher_sema is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+Iter 2, No.0 philosopher_condvar is eating
+Iter 2, No.1 philosopher_condvar is eating
+Iter 2, No.2 philosopher_condvar is eating
+Iter 2, No.3 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 3, No.4 philosopher_sema is eating
+Iter 3, No.0 philosopher_condvar is eating
+Iter 3, No.1 philosopher_condvar is eating
+Iter 3, No.2 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+Iter 4, No.0 philosopher_condvar is eating
+Iter 4, No.1 philosopher_condvar is eating
+Iter 4, No.2 philosopher_condvar is eating
+Iter 4, No.3 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is eating
+No.3 philosopher_condvar quit
+No.2 philosopher_condvar quit
+No.1 philosopher_condvar quit
+No.0 philosopher_condvar quit
+No.4 philosopher_sema quit
+Iter 4, No.0 philosopher_sema is eating
+No.2 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.4 philosopher_condvar quit
+No.3 philosopher_sema quit
+No.0 philosopher_sema quit
+Iter 1, No.1 philosopher_sema is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.1 philosopher_sema is eating
+No.1 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+kernel panic at kern/process/proc.c:482:
+    initproc exit.
+
+stack trackback:
+ebp:0xc03aaf88 eip:0xc0100af0 args:0xc010d9e4 0xc03aafcc 0x000001e2 0xc03aafb8 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03aafb8 eip:0xc0100e50 args:0xc010fc64 0x000001e2 0xc010fc88 0x00000000 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03aafe8 eip:0xc010af18 args:0x00000000 0x00000000 0x00000000 0x00000010 
+    kern/process/proc.c:482: do_exit+91
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
diff -r -u -P ../../origin/labcodes/lab7/.forktree.log lab7/.forktree.log
--- ../../origin/labcodes/lab7/.forktree.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.forktree.log	2020-05-28 23:48:12.759298032 +0800
@@ -0,0 +1,241 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "forktree".
+0002: I am ''
+000e: I am '1'
+0010: I am '11'
+0012: I am '111'
+0014: I am '1111'
+0013: I am '1110'
+0011: I am '110'
+0016: I am '1101'
+0015: I am '1100'
+000f: I am '10'
+0018: I am '101'
+001a: I am '1011'
+0019: I am '1010'
+0017: I am '100'
+001c: I am '1001'
+001b: I am '1000'
+000d: I am '0'
+001e: I am '01'
+0020: I am '011'
+0022: I am '0111'
+0021: I am '0110'
+001f: I am '010'
+0024: I am '0101'
+0023: I am '0100'
+001d: I am '00'
+0026: I am '001'
+0028: I am '0011'
+0027: I am '0010'
+0025: I am '000'
+002a: I am '0001'
+0029: I am '0000'
+Iter 1, No.1 philosopher_condvar is eating
+Iter 1, No.2 philosopher_condvar is eating
+Iter 1, No.3 philosopher_condvar is eating
+Iter 1, No.4 philosopher_condvar is eating
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+Iter 2, No.1 philosopher_condvar is eating
+Iter 2, No.2 philosopher_condvar is eating
+Iter 2, No.3 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+Iter 2, No.0 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+Iter 3, No.1 philosopher_condvar is eating
+Iter 3, No.2 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is eating
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+Iter 3, No.0 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 4, No.1 philosopher_condvar is eating
+Iter 4, No.2 philosopher_condvar is eating
+Iter 4, No.3 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is eating
+Iter 4, No.3 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 4, No.0 philosopher_condvar is eating
+No.4 philosopher_condvar quit
+No.3 philosopher_condvar quit
+No.2 philosopher_condvar quit
+No.1 philosopher_condvar quit
+No.0 philosopher_condvar quit
+No.2 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+No.1 philosopher_sema quit
+No.3 philosopher_sema quit
+Iter 1, No.4 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+Iter 3, No.4 philosopher_sema is thinking
+Iter 3, No.4 philosopher_sema is eating
+Iter 4, No.4 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+kernel panic at kern/process/proc.c:482:
+    initproc exit.
+
+stack trackback:
+ebp:0xc03aaf88 eip:0xc0100af0 args:0xc010d9e4 0xc03aafcc 0x000001e2 0xc03aafb8 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03aafb8 eip:0xc0100e50 args:0xc010fc64 0x000001e2 0xc010fc88 0x00000000 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03aafe8 eip:0xc010af18 args:0x00000000 0x00000000 0x00000000 0x00000010 
+    kern/process/proc.c:482: do_exit+91
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P ../../origin/labcodes/lab7/.hello.log lab7/.hello.log
--- ../../origin/labcodes/lab7/.hello.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.hello.log	2020-05-28 23:47:44.475298032 +0800
@@ -0,0 +1,213 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "hello".
+Hello world!!.
+I am process 2.
+hello pass.
+Iter 1, No.0 philosopher_condvar is eating
+Iter 1, No.1 philosopher_condvar is eating
+Iter 1, No.2 philosopher_condvar is eating
+Iter 1, No.3 philosopher_condvar is eating
+Iter 1, No.4 philosopher_condvar is eating
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+Iter 2, No.0 philosopher_condvar is eating
+Iter 2, No.1 philosopher_condvar is eating
+Iter 2, No.2 philosopher_condvar is eating
+Iter 2, No.3 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+Iter 3, No.0 philosopher_condvar is eating
+Iter 3, No.1 philosopher_condvar is eating
+Iter 3, No.2 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is eating
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 4, No.0 philosopher_condvar is eating
+Iter 4, No.1 philosopher_condvar is eating
+Iter 4, No.2 philosopher_condvar is eating
+Iter 4, No.3 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is eating
+Iter 4, No.3 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+No.4 philosopher_condvar quit
+No.3 philosopher_condvar quit
+No.2 philosopher_condvar quit
+No.1 philosopher_condvar quit
+No.0 philosopher_condvar quit
+No.2 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+No.1 philosopher_sema quit
+No.3 philosopher_sema quit
+Iter 1, No.4 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+Iter 3, No.4 philosopher_sema is thinking
+Iter 3, No.4 philosopher_sema is eating
+Iter 4, No.4 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+kernel panic at kern/process/proc.c:482:
+    initproc exit.
+
+stack trackback:
+ebp:0xc03aaf88 eip:0xc0100af0 args:0xc010d9e4 0xc03aafcc 0x000001e2 0xc03aafb8 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03aafb8 eip:0xc0100e50 args:0xc010fc64 0x000001e2 0xc010fc88 0x00000000 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03aafe8 eip:0xc010af18 args:0x00000000 0x00000000 0x00000000 0x00000010 
+    kern/process/proc.c:482: do_exit+91
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P ../../origin/labcodes/lab7/kern/debug/kdebug.c lab7/kern/debug/kdebug.c
--- ../../origin/labcodes/lab7/kern/debug/kdebug.c	2020-05-28 10:03:30.650537000 +0800
+++ lab7/kern/debug/kdebug.c	2020-05-28 20:38:28.015298032 +0800
@@ -347,5 +347,19 @@
       *           NOTICE: the calling funciton's return addr eip  = ss:[ebp+4]
       *                   the calling funciton's ebp = ss:[ebp]
       */
+    uint32_t ebp = read_ebp(), eip = read_eip();
+
+    int i, j;
+    for (i = 0; i < STACKFRAME_DEPTH && ebp != 0; i ++) {
+        cprintf("ebp:0x%08x eip:0x%08x args:", ebp, eip);
+        uint32_t *args = (uint32_t *)ebp + 2;
+        for (j = 0; j < 4; j ++) {
+            cprintf("0x%08x ", args[j]);
+        }
+        cprintf("\n");
+        print_debuginfo(eip - 1);
+        eip = ((uint32_t *)ebp)[1];
+        ebp = ((uint32_t *)ebp)[0];
+    }
 }
 
diff -r -u -P ../../origin/labcodes/lab7/kern/debug/kdebug.c.orig lab7/kern/debug/kdebug.c.orig
--- ../../origin/labcodes/lab7/kern/debug/kdebug.c.orig	1970-01-01 08:00:00.000000000 +0800
+++ lab7/kern/debug/kdebug.c.orig	2020-05-28 20:38:28.015298032 +0800
@@ -0,0 +1,351 @@
+#include <defs.h>
+#include <x86.h>
+#include <stab.h>
+#include <stdio.h>
+#include <string.h>
+#include <memlayout.h>
+#include <sync.h>
+#include <vmm.h>
+#include <proc.h>
+#include <kdebug.h>
+#include <kmonitor.h>
+#include <assert.h>
+
+#define STACKFRAME_DEPTH 20
+
+extern const struct stab __STAB_BEGIN__[];  // beginning of stabs table
+extern const struct stab __STAB_END__[];    // end of stabs table
+extern const char __STABSTR_BEGIN__[];      // beginning of string table
+extern const char __STABSTR_END__[];        // end of string table
+
+/* debug information about a particular instruction pointer */
+struct eipdebuginfo {
+    const char *eip_file;                   // source code filename for eip
+    int eip_line;                           // source code line number for eip
+    const char *eip_fn_name;                // name of function containing eip
+    int eip_fn_namelen;                     // length of function's name
+    uintptr_t eip_fn_addr;                  // start address of function
+    int eip_fn_narg;                        // number of function arguments
+};
+
+/* user STABS data structure  */
+struct userstabdata {
+    const struct stab *stabs;
+    const struct stab *stab_end;
+    const char *stabstr;
+    const char *stabstr_end;
+};
+
+/* *
+ * stab_binsearch - according to the input, the initial value of
+ * range [*@region_left, *@region_right], find a single stab entry
+ * that includes the address @addr and matches the type @type,
+ * and then save its boundary to the locations that pointed
+ * by @region_left and @region_right.
+ *
+ * Some stab types are arranged in increasing order by instruction address.
+ * For example, N_FUN stabs (stab entries with n_type == N_FUN), which
+ * mark functions, and N_SO stabs, which mark source files.
+ *
+ * Given an instruction address, this function finds the single stab entry
+ * of type @type that contains that address.
+ *
+ * The search takes place within the range [*@region_left, *@region_right].
+ * Thus, to search an entire set of N stabs, you might do:
+ *
+ *      left = 0;
+ *      right = N - 1;    (rightmost stab)
+ *      stab_binsearch(stabs, &left, &right, type, addr);
+ *
+ * The search modifies *region_left and *region_right to bracket the @addr.
+ * *@region_left points to the matching stab that contains @addr,
+ * and *@region_right points just before the next stab.
+ * If *@region_left > *region_right, then @addr is not contained in any
+ * matching stab.
+ *
+ * For example, given these N_SO stabs:
+ *      Index  Type   Address
+ *      0      SO     f0100000
+ *      13     SO     f0100040
+ *      117    SO     f0100176
+ *      118    SO     f0100178
+ *      555    SO     f0100652
+ *      556    SO     f0100654
+ *      657    SO     f0100849
+ * this code:
+ *      left = 0, right = 657;
+ *      stab_binsearch(stabs, &left, &right, N_SO, 0xf0100184);
+ * will exit setting left = 118, right = 554.
+ * */
+static void
+stab_binsearch(const struct stab *stabs, int *region_left, int *region_right,
+           int type, uintptr_t addr) {
+    int l = *region_left, r = *region_right, any_matches = 0;
+
+    while (l <= r) {
+        int true_m = (l + r) / 2, m = true_m;
+
+        // search for earliest stab with right type
+        while (m >= l && stabs[m].n_type != type) {
+            m --;
+        }
+        if (m < l) {    // no match in [l, m]
+            l = true_m + 1;
+            continue;
+        }
+
+        // actual binary search
+        any_matches = 1;
+        if (stabs[m].n_value < addr) {
+            *region_left = m;
+            l = true_m + 1;
+        } else if (stabs[m].n_value > addr) {
+            *region_right = m - 1;
+            r = m - 1;
+        } else {
+            // exact match for 'addr', but continue loop to find
+            // *region_right
+            *region_left = m;
+            l = m;
+            addr ++;
+        }
+    }
+
+    if (!any_matches) {
+        *region_right = *region_left - 1;
+    }
+    else {
+        // find rightmost region containing 'addr'
+        l = *region_right;
+        for (; l > *region_left && stabs[l].n_type != type; l --)
+            /* do nothing */;
+        *region_left = l;
+    }
+}
+
+/* *
+ * debuginfo_eip - Fill in the @info structure with information about
+ * the specified instruction address, @addr.  Returns 0 if information
+ * was found, and negative if not.  But even if it returns negative it
+ * has stored some information into '*info'.
+ * */
+int
+debuginfo_eip(uintptr_t addr, struct eipdebuginfo *info) {
+    const struct stab *stabs, *stab_end;
+    const char *stabstr, *stabstr_end;
+
+    info->eip_file = "<unknown>";
+    info->eip_line = 0;
+    info->eip_fn_name = "<unknown>";
+    info->eip_fn_namelen = 9;
+    info->eip_fn_addr = addr;
+    info->eip_fn_narg = 0;
+
+    // find the relevant set of stabs
+    if (addr >= KERNBASE) {
+        stabs = __STAB_BEGIN__;
+        stab_end = __STAB_END__;
+        stabstr = __STABSTR_BEGIN__;
+        stabstr_end = __STABSTR_END__;
+    }
+    else {
+        // user-program linker script, tools/user.ld puts the information about the
+        // program's stabs (included __STAB_BEGIN__, __STAB_END__, __STABSTR_BEGIN__,
+        // and __STABSTR_END__) in a structure located at virtual address USTAB.
+        const struct userstabdata *usd = (struct userstabdata *)USTAB;
+
+        // make sure that debugger (current process) can access this memory
+        struct mm_struct *mm;
+        if (current == NULL || (mm = current->mm) == NULL) {
+            return -1;
+        }
+        if (!user_mem_check(mm, (uintptr_t)usd, sizeof(struct userstabdata), 0)) {
+            return -1;
+        }
+
+        stabs = usd->stabs;
+        stab_end = usd->stab_end;
+        stabstr = usd->stabstr;
+        stabstr_end = usd->stabstr_end;
+
+        // make sure the STABS and string table memory is valid
+        if (!user_mem_check(mm, (uintptr_t)stabs, (uintptr_t)stab_end - (uintptr_t)stabs, 0)) {
+            return -1;
+        }
+        if (!user_mem_check(mm, (uintptr_t)stabstr, stabstr_end - stabstr, 0)) {
+            return -1;
+        }
+    }
+
+    // String table validity checks
+    if (stabstr_end <= stabstr || stabstr_end[-1] != 0) {
+        return -1;
+    }
+
+    // Now we find the right stabs that define the function containing
+    // 'eip'.  First, we find the basic source file containing 'eip'.
+    // Then, we look in that source file for the function.  Then we look
+    // for the line number.
+
+    // Search the entire set of stabs for the source file (type N_SO).
+    int lfile = 0, rfile = (stab_end - stabs) - 1;
+    stab_binsearch(stabs, &lfile, &rfile, N_SO, addr);
+    if (lfile == 0)
+        return -1;
+
+    // Search within that file's stabs for the function definition
+    // (N_FUN).
+    int lfun = lfile, rfun = rfile;
+    int lline, rline;
+    stab_binsearch(stabs, &lfun, &rfun, N_FUN, addr);
+
+    if (lfun <= rfun) {
+        // stabs[lfun] points to the function name
+        // in the string table, but check bounds just in case.
+        if (stabs[lfun].n_strx < stabstr_end - stabstr) {
+            info->eip_fn_name = stabstr + stabs[lfun].n_strx;
+        }
+        info->eip_fn_addr = stabs[lfun].n_value;
+        addr -= info->eip_fn_addr;
+        // Search within the function definition for the line number.
+        lline = lfun;
+        rline = rfun;
+    } else {
+        // Couldn't find function stab!  Maybe we're in an assembly
+        // file.  Search the whole file for the line number.
+        info->eip_fn_addr = addr;
+        lline = lfile;
+        rline = rfile;
+    }
+    info->eip_fn_namelen = strfind(info->eip_fn_name, ':') - info->eip_fn_name;
+
+    // Search within [lline, rline] for the line number stab.
+    // If found, set info->eip_line to the right line number.
+    // If not found, return -1.
+    stab_binsearch(stabs, &lline, &rline, N_SLINE, addr);
+    if (lline <= rline) {
+        info->eip_line = stabs[rline].n_desc;
+    } else {
+        return -1;
+    }
+
+    // Search backwards from the line number for the relevant filename stab.
+    // We can't just use the "lfile" stab because inlined functions
+    // can interpolate code from a different file!
+    // Such included source files use the N_SOL stab type.
+    while (lline >= lfile
+           && stabs[lline].n_type != N_SOL
+           && (stabs[lline].n_type != N_SO || !stabs[lline].n_value)) {
+        lline --;
+    }
+    if (lline >= lfile && stabs[lline].n_strx < stabstr_end - stabstr) {
+        info->eip_file = stabstr + stabs[lline].n_strx;
+    }
+
+    // Set eip_fn_narg to the number of arguments taken by the function,
+    // or 0 if there was no containing function.
+    if (lfun < rfun) {
+        for (lline = lfun + 1;
+             lline < rfun && stabs[lline].n_type == N_PSYM;
+             lline ++) {
+            info->eip_fn_narg ++;
+        }
+    }
+    return 0;
+}
+
+/* *
+ * print_kerninfo - print the information about kernel, including the location
+ * of kernel entry, the start addresses of data and text segements, the start
+ * address of free memory and how many memory that kernel has used.
+ * */
+void
+print_kerninfo(void) {
+    extern char etext[], edata[], end[], kern_init[];
+    cprintf("Special kernel symbols:\n");
+    cprintf("  entry  0x%08x (phys)\n", kern_init);
+    cprintf("  etext  0x%08x (phys)\n", etext);
+    cprintf("  edata  0x%08x (phys)\n", edata);
+    cprintf("  end    0x%08x (phys)\n", end);
+    cprintf("Kernel executable memory footprint: %dKB\n", (end - kern_init + 1023)/1024);
+}
+
+/* *
+ * print_debuginfo - read and print the stat information for the address @eip,
+ * and info.eip_fn_addr should be the first address of the related function.
+ * */
+void
+print_debuginfo(uintptr_t eip) {
+    struct eipdebuginfo info;
+    if (debuginfo_eip(eip, &info) != 0) {
+        cprintf("    <unknow>: -- 0x%08x --\n", eip);
+    }
+    else {
+        char fnname[256];
+        int j;
+        for (j = 0; j < info.eip_fn_namelen; j ++) {
+            fnname[j] = info.eip_fn_name[j];
+        }
+        fnname[j] = '\0';
+        cprintf("    %s:%d: %s+%d\n", info.eip_file, info.eip_line,
+                fnname, eip - info.eip_fn_addr);
+    }
+}
+
+static __noinline uint32_t
+read_eip(void) {
+    uint32_t eip;
+    asm volatile("movl 4(%%ebp), %0" : "=r" (eip));
+    return eip;
+}
+
+/* *
+ * print_stackframe - print a list of the saved eip values from the nested 'call'
+ * instructions that led to the current point of execution
+ *
+ * The x86 stack pointer, namely esp, points to the lowest location on the stack
+ * that is currently in use. Everything below that location in stack is free. Pushing
+ * a value onto the stack will invole decreasing the stack pointer and then writing
+ * the value to the place that stack pointer pointes to. And popping a value do the
+ * opposite.
+ *
+ * The ebp (base pointer) register, in contrast, is associated with the stack
+ * primarily by software convention. On entry to a C function, the function's
+ * prologue code normally saves the previous function's base pointer by pushing
+ * it onto the stack, and then copies the current esp value into ebp for the duration
+ * of the function. If all the functions in a program obey this convention,
+ * then at any given point during the program's execution, it is possible to trace
+ * back through the stack by following the chain of saved ebp pointers and determining
+ * exactly what nested sequence of function calls caused this particular point in the
+ * program to be reached. This capability can be particularly useful, for example,
+ * when a particular function causes an assert failure or panic because bad arguments
+ * were passed to it, but you aren't sure who passed the bad arguments. A stack
+ * backtrace lets you find the offending function.
+ *
+ * The inline function read_ebp() can tell us the value of current ebp. And the
+ * non-inline function read_eip() is useful, it can read the value of current eip,
+ * since while calling this function, read_eip() can read the caller's eip from
+ * stack easily.
+ *
+ * In print_debuginfo(), the function debuginfo_eip() can get enough information about
+ * calling-chain. Finally print_stackframe() will trace and print them for debugging.
+ *
+ * Note that, the length of ebp-chain is limited. In boot/bootasm.S, before jumping
+ * to the kernel entry, the value of ebp has been set to zero, that's the boundary.
+ * */
+void
+print_stackframe(void) {
+     /* LAB1 YOUR CODE : STEP 1 */
+     /* (1) call read_ebp() to get the value of ebp. the type is (uint32_t);
+      * (2) call read_eip() to get the value of eip. the type is (uint32_t);
+      * (3) from 0 .. STACKFRAME_DEPTH
+      *    (3.1) printf value of ebp, eip
+      *    (3.2) (uint32_t)calling arguments [0..4] = the contents in address (uint32_t)ebp +2 [0..4]
+      *    (3.3) cprintf("\n");
+      *    (3.4) call print_debuginfo(eip-1) to print the C calling function name and line number, etc.
+      *    (3.5) popup a calling stackframe
+      *           NOTICE: the calling funciton's return addr eip  = ss:[ebp+4]
+      *                   the calling funciton's ebp = ss:[ebp]
+      */
+}
+
diff -r -u -P ../../origin/labcodes/lab7/kern/mm/default_pmm.c lab7/kern/mm/default_pmm.c
--- ../../origin/labcodes/lab7/kern/mm/default_pmm.c	2020-05-28 10:03:30.650537000 +0800
+++ lab7/kern/mm/default_pmm.c	2020-05-28 20:38:28.015298032 +0800
@@ -116,7 +116,7 @@
     base->property = n;
     SetPageProperty(base);
     nr_free += n;
-    list_add(&free_list, &(base->page_link));
+    list_add_before(&free_list, &(base->page_link));
 }
 
 static struct Page *
@@ -127,6 +127,7 @@
     }
     struct Page *page = NULL;
     list_entry_t *le = &free_list;
+    // TODO: optimize (next-fit)
     while ((le = list_next(le)) != &free_list) {
         struct Page *p = le2page(le, page_link);
         if (p->property >= n) {
@@ -135,12 +136,13 @@
         }
     }
     if (page != NULL) {
-        list_del(&(page->page_link));
         if (page->property > n) {
             struct Page *p = page + n;
             p->property = page->property - n;
-            list_add(&free_list, &(p->page_link));
-    }
+            SetPageProperty(p);
+            list_add_after(&(page->page_link), &(p->page_link));
+        }
+        list_del(&(page->page_link));
         nr_free -= n;
         ClearPageProperty(page);
     }
@@ -162,6 +164,7 @@
     while (le != &free_list) {
         p = le2page(le, page_link);
         le = list_next(le);
+        // TODO: optimize
         if (base + base->property == p) {
             base->property += p->property;
             ClearPageProperty(p);
@@ -175,7 +178,16 @@
         }
     }
     nr_free += n;
-    list_add(&free_list, &(base->page_link));
+    le = list_next(&free_list);
+    while (le != &free_list) {
+        p = le2page(le, page_link);
+        if (base + base->property <= p) {
+            assert(base + base->property != p);
+            break;
+        }
+        le = list_next(le);
+    }
+    list_add_before(le, &(base->page_link));
 }
 
 static size_t
@@ -308,4 +320,3 @@
     .nr_free_pages = default_nr_free_pages,
     .check = default_check,
 };
-
diff -r -u -P ../../origin/labcodes/lab7/kern/mm/pmm.c lab7/kern/mm/pmm.c
--- ../../origin/labcodes/lab7/kern/mm/pmm.c	2020-05-28 10:03:30.650537000 +0800
+++ lab7/kern/mm/pmm.c	2020-05-28 20:38:28.015298032 +0800
@@ -375,6 +375,18 @@
     }
     return NULL;          // (8) return page table entry
 #endif
+    pde_t *pdep = &pgdir[PDX(la)];
+    if (!(*pdep & PTE_P)) {
+        struct Page *page;
+        if (!create || (page = alloc_page()) == NULL) {
+            return NULL;
+        }
+        set_page_ref(page, 1);
+        uintptr_t pa = page2pa(page);
+        memset(KADDR(pa), 0, PGSIZE);
+        *pdep = pa | PTE_U | PTE_W | PTE_P;
+    }
+    return &((pte_t *)KADDR(PDE_ADDR(*pdep)))[PTX(la)];
 }
 
 //get_page - get related Page struct for linear address la using PDT pgdir
@@ -412,7 +424,7 @@
      *   PTE_P           0x001                   // page table/directory entry flags bit : Present
      */
 #if 0
-    if (0) {                      //(1) check if this page table entry is present
+    if (0) {                      //(1) check if page directory is present
         struct Page *page = NULL; //(2) find corresponding page to pte
                                   //(3) decrease page reference
                                   //(4) and free this page when page reference reachs 0
@@ -420,6 +432,14 @@
                                   //(6) flush tlb
     }
 #endif
+    if (*ptep & PTE_P) {
+        struct Page *page = pte2page(*ptep);
+        if (page_ref_dec(page) == 0) {
+            free_page(page);
+        }
+        *ptep = 0;
+        tlb_invalidate(pgdir, la);
+    }
 }
 
 void
@@ -501,6 +521,10 @@
          * (3) memory copy from src_kvaddr to dst_kvaddr, size is PGSIZE
          * (4) build the map of phy addr of  nage with the linear addr start
          */
+        void * kva_src = page2kva(page);
+        void * kva_dst = page2kva(npage);
+        memcpy(kva_dst, kva_src, PGSIZE);
+        ret = page_insert(to, npage, start, perm);
         assert(ret == 0);
         }
         start += PGSIZE;
diff -r -u -P ../../origin/labcodes/lab7/kern/mm/swap_fifo.c lab7/kern/mm/swap_fifo.c
--- ../../origin/labcodes/lab7/kern/mm/swap_fifo.c	2020-05-28 10:03:30.650537000 +0800
+++ lab7/kern/mm/swap_fifo.c	2020-05-28 20:38:28.019298032 +0800
@@ -51,6 +51,7 @@
     //record the page access situlation
     /*LAB3 EXERCISE 2: YOUR CODE*/ 
     //(1)link the most recent arrival page at the back of the pra_list_head qeueue.
+    list_add(head, entry);
     return 0;
 }
 /*
@@ -67,6 +68,12 @@
      /*LAB3 EXERCISE 2: YOUR CODE*/ 
      //(1)  unlink the  earliest arrival page in front of pra_list_head qeueue
      //(2)  assign the value of *ptr_page to the addr of this page
+     list_entry_t *le = head->prev;
+     assert(head!=le);
+     struct Page *p = le2page(le, pra_page_link);
+     list_del(le);
+     assert(p !=NULL);
+     *ptr_page = p;
      return 0;
 }
 
diff -r -u -P ../../origin/labcodes/lab7/kern/mm/vmm.c lab7/kern/mm/vmm.c
--- ../../origin/labcodes/lab7/kern/mm/vmm.c	2020-05-28 10:03:30.650537000 +0800
+++ lab7/kern/mm/vmm.c	2020-05-28 20:38:28.019298032 +0800
@@ -493,6 +493,36 @@
         }
    }
 #endif
+    // try to find a pte, if pte's PT(Page Table) isn't existed, then create a PT.
+    // (notice the 3th parameter '1')
+    if ((ptep = get_pte(mm->pgdir, addr, 1)) == NULL) {
+        cprintf("get_pte in do_pgfault failed\n");
+        goto failed;
+    }
+    
+    if (*ptep == 0) { // if the phy addr isn't exist, then alloc a page & map the phy addr with logical addr
+        if (pgdir_alloc_page(mm->pgdir, addr, perm) == NULL) {
+            cprintf("pgdir_alloc_page in do_pgfault failed\n");
+            goto failed;
+        }
+    }
+    else { // if this pte is a swap entry, then load data from disk to a page with phy addr
+           // and call page_insert to map the phy addr with logical addr
+        if(swap_init_ok) {
+            struct Page *page=NULL;
+            if ((ret = swap_in(mm, addr, &page)) != 0) {
+                cprintf("swap_in in do_pgfault failed\n");
+                goto failed;
+            }    
+            page_insert(mm->pgdir, page, addr, perm);
+            swap_map_swappable(mm, addr, page, 1);
+            page->pra_vaddr = addr;
+        }
+        else {
+            cprintf("no swap_init_ok but ptep is %x, failed\n",*ptep);
+            goto failed;
+        }
+   }
    ret = 0;
 failed:
     return ret;
diff -r -u -P ../../origin/labcodes/lab7/kern/process/proc.c lab7/kern/process/proc.c
--- ../../origin/labcodes/lab7/kern/process/proc.c	2020-05-28 10:03:30.650537000 +0800
+++ lab7/kern/process/proc.c	2020-05-28 23:48:43.539298032 +0800
@@ -119,6 +119,26 @@
      *     uint32_t lab6_stride;                       // FOR LAB6 ONLY: the current stride of the process
      *     uint32_t lab6_priority;                     // FOR LAB6 ONLY: the priority of process, set by lab6_set_priority(uint32_t)
      */
+    proc->state = PROC_UNINIT;
+    proc->pid = -1;
+    proc->runs = 0;
+    proc->kstack = 0;
+    proc->need_resched = 0;
+    proc->parent = NULL;
+    proc->mm = NULL;
+    memset(&(proc->context), 0, sizeof(struct context));
+    proc->tf = NULL;
+    proc->cr3 = boot_cr3;
+    proc->flags = 0;
+    memset(proc->name, 0, PROC_NAME_LEN);
+    proc->wait_state = 0;
+    proc->cptr = proc->optr = proc->yptr = NULL;
+    proc->rq = NULL;
+    list_init(&(proc->run_link));
+    proc->time_slice = 0;
+    proc->lab6_run_pool.left = proc->lab6_run_pool.right = proc->lab6_run_pool.parent = NULL;
+    proc->lab6_stride = 0;
+    proc->lab6_priority = 0;
     }
     return proc;
 }
@@ -413,7 +433,32 @@
 	*    update step 1: set child proc's parent to current process, make sure current process's wait_state is 0
 	*    update step 5: insert proc_struct into hash_list && proc_list, set the relation links of process
     */
-	
+    if ((proc = alloc_proc()) == NULL) {
+        goto fork_out;
+    }
+
+    proc->parent = current;
+
+    if (setup_kstack(proc) != 0) {
+        goto bad_fork_cleanup_proc;
+    }
+    if (copy_mm(clone_flags, proc) != 0) {
+        goto bad_fork_cleanup_kstack;
+    }
+    copy_thread(proc, stack, tf);
+
+    bool intr_flag;
+    local_intr_save(intr_flag);
+    {
+        proc->pid = get_pid();
+        hash_proc(proc);
+        set_links(proc);
+    }
+    local_intr_restore(intr_flag);
+
+    wakeup_proc(proc);
+
+    ret = proc->pid;	
 fork_out:
     return ret;
 
@@ -612,6 +657,11 @@
      *          tf_eip should be the entry point of this binary program (elf->e_entry)
      *          tf_eflags should be set to enable computer to produce Interrupt
      */
+    tf->tf_cs = USER_CS;
+    tf->tf_ds = tf->tf_es = tf->tf_ss = USER_DS;
+    tf->tf_esp = USTACKTOP;
+    tf->tf_eip = elf->e_entry;
+    tf->tf_eflags = FL_IF;
     ret = 0;
 out:
     return ret;
diff -r -u -P ../../origin/labcodes/lab7/kern/schedule/default_sched.c lab7/kern/schedule/default_sched.c
--- ../../origin/labcodes/lab7/kern/schedule/default_sched.c	2020-05-28 10:03:30.650537000 +0800
+++ lab7/kern/schedule/default_sched.c	2020-05-28 20:38:28.019298032 +0800
@@ -4,55 +4,160 @@
 #include <assert.h>
 #include <default_sched.h>
 
-static void
-RR_init(struct run_queue *rq) {
-    list_init(&(rq->run_list));
-    rq->proc_num = 0;
+#define USE_SKEW_HEAP 1
+
+/* You should define the BigStride constant here*/
+/* LAB6: YOUR CODE */
+#define BIG_STRIDE    0x7FFFFFFF /* ??? */
+
+/* The compare function for two skew_heap_node_t's and the
+ * corresponding procs*/
+static int
+proc_stride_comp_f(void *a, void *b)
+{
+     struct proc_struct *p = le2proc(a, lab6_run_pool);
+     struct proc_struct *q = le2proc(b, lab6_run_pool);
+     int32_t c = p->lab6_stride - q->lab6_stride;
+     if (c > 0) return 1;
+     else if (c == 0) return 0;
+     else return -1;
 }
 
+/*
+ * stride_init initializes the run-queue rq with correct assignment for
+ * member variables, including:
+ *
+ *   - run_list: should be a empty list after initialization.
+ *   - lab6_run_pool: NULL
+ *   - proc_num: 0
+ *   - max_time_slice: no need here, the variable would be assigned by the caller.
+ *
+ * hint: see proj13.1/libs/list.h for routines of the list structures.
+ */
 static void
-RR_enqueue(struct run_queue *rq, struct proc_struct *proc) {
-    assert(list_empty(&(proc->run_link)));
-    list_add_before(&(rq->run_list), &(proc->run_link));
-    if (proc->time_slice == 0 || proc->time_slice > rq->max_time_slice) {
-        proc->time_slice = rq->max_time_slice;
-    }
-    proc->rq = rq;
-    rq->proc_num ++;
+stride_init(struct run_queue *rq) {
+     /* LAB6: YOUR CODE */
+     list_init(&(rq->run_list));
+     rq->lab6_run_pool = NULL;
+     rq->proc_num = 0;
 }
 
+/*
+ * stride_enqueue inserts the process ``proc'' into the run-queue
+ * ``rq''. The procedure should verify/initialize the relevant members
+ * of ``proc'', and then put the ``lab6_run_pool'' node into the
+ * queue(since we use priority queue here). The procedure should also
+ * update the meta date in ``rq'' structure.
+ *
+ * proc->time_slice denotes the time slices allocation for the
+ * process, which should set to rq->max_time_slice.
+ * 
+ * hint: see proj13.1/libs/skew_heap.h for routines of the priority
+ * queue structures.
+ */
 static void
-RR_dequeue(struct run_queue *rq, struct proc_struct *proc) {
-    assert(!list_empty(&(proc->run_link)) && proc->rq == rq);
-    list_del_init(&(proc->run_link));
-    rq->proc_num --;
+stride_enqueue(struct run_queue *rq, struct proc_struct *proc) {
+     /* LAB6: YOUR CODE */
+#if USE_SKEW_HEAP
+     rq->lab6_run_pool =
+          skew_heap_insert(rq->lab6_run_pool, &(proc->lab6_run_pool), proc_stride_comp_f);
+#else
+     assert(list_empty(&(proc->run_link)));
+     list_add_before(&(rq->run_list), &(proc->run_link));
+#endif
+     if (proc->time_slice == 0 || proc->time_slice > rq->max_time_slice) {
+          proc->time_slice = rq->max_time_slice;
+     }
+     proc->rq = rq;
+     rq->proc_num ++;
 }
 
+/*
+ * stride_dequeue removes the process ``proc'' from the run-queue
+ * ``rq'', the operation would be finished by the skew_heap_remove
+ * operations. Remember to update the ``rq'' structure.
+ *
+ * hint: see proj13.1/libs/skew_heap.h for routines of the priority
+ * queue structures.
+ */
+static void
+stride_dequeue(struct run_queue *rq, struct proc_struct *proc) {
+     /* LAB6: YOUR CODE */
+#if USE_SKEW_HEAP
+     rq->lab6_run_pool =
+          skew_heap_remove(rq->lab6_run_pool, &(proc->lab6_run_pool), proc_stride_comp_f);
+#else
+     assert(!list_empty(&(proc->run_link)) && proc->rq == rq);
+     list_del_init(&(proc->run_link));
+#endif
+     rq->proc_num --;
+}
+/*
+ * stride_pick_next pick the element from the ``run-queue'', with the
+ * minimum value of stride, and returns the corresponding process
+ * pointer. The process pointer would be calculated by macro le2proc,
+ * see proj13.1/kern/process/proc.h for definition. Return NULL if
+ * there is no process in the queue.
+ *
+ * When one proc structure is selected, remember to update the stride
+ * property of the proc. (stride += BIG_STRIDE / priority)
+ *
+ * hint: see proj13.1/libs/skew_heap.h for routines of the priority
+ * queue structures.
+ */
 static struct proc_struct *
-RR_pick_next(struct run_queue *rq) {
-    list_entry_t *le = list_next(&(rq->run_list));
-    if (le != &(rq->run_list)) {
-        return le2proc(le, run_link);
-    }
-    return NULL;
+stride_pick_next(struct run_queue *rq) {
+     /* LAB6: YOUR CODE */
+#if USE_SKEW_HEAP
+     if (rq->lab6_run_pool == NULL) return NULL;
+     struct proc_struct *p = le2proc(rq->lab6_run_pool, lab6_run_pool);
+#else
+     list_entry_t *le = list_next(&(rq->run_list));
+
+     if (le == &rq->run_list)
+          return NULL;
+     
+     struct proc_struct *p = le2proc(le, run_link);
+     le = list_next(le);
+     while (le != &rq->run_list)
+     {
+          struct proc_struct *q = le2proc(le, run_link);
+          if ((int32_t)(p->lab6_stride - q->lab6_stride) > 0)
+               p = q;
+          le = list_next(le);
+     }
+#endif
+     if (p->lab6_priority == 0)
+          p->lab6_stride += BIG_STRIDE;
+     else p->lab6_stride += BIG_STRIDE / p->lab6_priority;
+     return p;
 }
 
+/*
+ * stride_proc_tick works with the tick event of current process. You
+ * should check whether the time slices for current process is
+ * exhausted and update the proc struct ``proc''. proc->time_slice
+ * denotes the time slices left for current
+ * process. proc->need_resched is the flag variable for process
+ * switching.
+ */
 static void
-RR_proc_tick(struct run_queue *rq, struct proc_struct *proc) {
-    if (proc->time_slice > 0) {
-        proc->time_slice --;
-    }
-    if (proc->time_slice == 0) {
-        proc->need_resched = 1;
-    }
+stride_proc_tick(struct run_queue *rq, struct proc_struct *proc) {
+     /* LAB6: YOUR CODE */
+     if (proc->time_slice > 0) {
+          proc->time_slice --;
+     }
+     if (proc->time_slice == 0) {
+          proc->need_resched = 1;
+     }
 }
 
 struct sched_class default_sched_class = {
-    .name = "RR_scheduler",
-    .init = RR_init,
-    .enqueue = RR_enqueue,
-    .dequeue = RR_dequeue,
-    .pick_next = RR_pick_next,
-    .proc_tick = RR_proc_tick,
+     .name = "stride_scheduler",
+     .init = stride_init,
+     .enqueue = stride_enqueue,
+     .dequeue = stride_dequeue,
+     .pick_next = stride_pick_next,
+     .proc_tick = stride_proc_tick,
 };
 
diff -r -u -P ../../origin/labcodes/lab7/kern/schedule/default_sched_copy lab7/kern/schedule/default_sched_copy
--- ../../origin/labcodes/lab7/kern/schedule/default_sched_copy	1970-01-01 08:00:00.000000000 +0800
+++ lab7/kern/schedule/default_sched_copy	2020-05-28 20:38:28.023298032 +0800
@@ -0,0 +1,58 @@
+#include <defs.h>
+#include <list.h>
+#include <proc.h>
+#include <assert.h>
+#include <default_sched.h>
+
+static void
+RR_init(struct run_queue *rq) {
+    list_init(&(rq->run_list));
+    rq->proc_num = 0;
+}
+
+static void
+RR_enqueue(struct run_queue *rq, struct proc_struct *proc) {
+    assert(list_empty(&(proc->run_link)));
+    list_add_before(&(rq->run_list), &(proc->run_link));
+    if (proc->time_slice == 0 || proc->time_slice > rq->max_time_slice) {
+        proc->time_slice = rq->max_time_slice;
+    }
+    proc->rq = rq;
+    rq->proc_num ++;
+}
+
+static void
+RR_dequeue(struct run_queue *rq, struct proc_struct *proc) {
+    assert(!list_empty(&(proc->run_link)) && proc->rq == rq);
+    list_del_init(&(proc->run_link));
+    rq->proc_num --;
+}
+
+static struct proc_struct *
+RR_pick_next(struct run_queue *rq) {
+    list_entry_t *le = list_next(&(rq->run_list));
+    if (le != &(rq->run_list)) {
+        return le2proc(le, run_link);
+    }
+    return NULL;
+}
+
+static void
+RR_proc_tick(struct run_queue *rq, struct proc_struct *proc) {
+    if (proc->time_slice > 0) {
+        proc->time_slice --;
+    }
+    if (proc->time_slice == 0) {
+        proc->need_resched = 1;
+    }
+}
+
+struct sched_class default_sched_class = {
+    .name = "RR_scheduler",
+    .init = RR_init,
+    .enqueue = RR_enqueue,
+    .dequeue = RR_dequeue,
+    .pick_next = RR_pick_next,
+    .proc_tick = RR_proc_tick,
+};
+
diff -r -u -P ../../origin/labcodes/lab7/kern/schedule/default_sched_stride_c lab7/kern/schedule/default_sched_stride_c
--- ../../origin/labcodes/lab7/kern/schedule/default_sched_stride_c	2020-05-28 10:03:30.650537000 +0800
+++ lab7/kern/schedule/default_sched_stride_c	2020-05-28 20:38:28.023298032 +0800
@@ -8,7 +8,7 @@
 
 /* You should define the BigStride constant here*/
 /* LAB6: YOUR CODE */
-#define BIG_STRIDE    /* you should give a value, and is ??? */
+#define BIG_STRIDE    0x7FFFFFFF /* ??? */
 
 /* The compare function for two skew_heap_node_t's and the
  * corresponding procs*/
@@ -32,15 +32,14 @@
  *   - proc_num: 0
  *   - max_time_slice: no need here, the variable would be assigned by the caller.
  *
- * hint: see libs/list.h for routines of the list structures.
+ * hint: see proj13.1/libs/list.h for routines of the list structures.
  */
 static void
 stride_init(struct run_queue *rq) {
-     /* LAB6: YOUR CODE 
-      * (1) init the ready process list: rq->run_list
-      * (2) init the run pool: rq->lab6_run_pool
-      * (3) set number of process: rq->proc_num to 0       
-      */
+     /* LAB6: YOUR CODE */
+     list_init(&(rq->run_list));
+     rq->lab6_run_pool = NULL;
+     rq->proc_num = 0;
 }
 
 /*
@@ -53,20 +52,24 @@
  * proc->time_slice denotes the time slices allocation for the
  * process, which should set to rq->max_time_slice.
  * 
- * hint: see libs/skew_heap.h for routines of the priority
+ * hint: see proj13.1/libs/skew_heap.h for routines of the priority
  * queue structures.
  */
 static void
 stride_enqueue(struct run_queue *rq, struct proc_struct *proc) {
-     /* LAB6: YOUR CODE 
-      * (1) insert the proc into rq correctly
-      * NOTICE: you can use skew_heap or list. Important functions
-      *         skew_heap_insert: insert a entry into skew_heap
-      *         list_add_before: insert  a entry into the last of list   
-      * (2) recalculate proc->time_slice
-      * (3) set proc->rq pointer to rq
-      * (4) increase rq->proc_num
-      */
+     /* LAB6: YOUR CODE */
+#if USE_SKEW_HEAP
+     rq->lab6_run_pool =
+          skew_heap_insert(rq->lab6_run_pool, &(proc->lab6_run_pool), proc_stride_comp_f);
+#else
+     assert(list_empty(&(proc->run_link)));
+     list_add_before(&(rq->run_list), &(proc->run_link));
+#endif
+     if (proc->time_slice == 0 || proc->time_slice > rq->max_time_slice) {
+          proc->time_slice = rq->max_time_slice;
+     }
+     proc->rq = rq;
+     rq->proc_num ++;
 }
 
 /*
@@ -74,40 +77,60 @@
  * ``rq'', the operation would be finished by the skew_heap_remove
  * operations. Remember to update the ``rq'' structure.
  *
- * hint: see libs/skew_heap.h for routines of the priority
+ * hint: see proj13.1/libs/skew_heap.h for routines of the priority
  * queue structures.
  */
 static void
 stride_dequeue(struct run_queue *rq, struct proc_struct *proc) {
-     /* LAB6: YOUR CODE 
-      * (1) remove the proc from rq correctly
-      * NOTICE: you can use skew_heap or list. Important functions
-      *         skew_heap_remove: remove a entry from skew_heap
-      *         list_del_init: remove a entry from the  list
-      */
+     /* LAB6: YOUR CODE */
+#if USE_SKEW_HEAP
+     rq->lab6_run_pool =
+          skew_heap_remove(rq->lab6_run_pool, &(proc->lab6_run_pool), proc_stride_comp_f);
+#else
+     assert(!list_empty(&(proc->run_link)) && proc->rq == rq);
+     list_del_init(&(proc->run_link));
+#endif
+     rq->proc_num --;
 }
 /*
  * stride_pick_next pick the element from the ``run-queue'', with the
  * minimum value of stride, and returns the corresponding process
  * pointer. The process pointer would be calculated by macro le2proc,
- * see kern/process/proc.h for definition. Return NULL if
+ * see proj13.1/kern/process/proc.h for definition. Return NULL if
  * there is no process in the queue.
  *
  * When one proc structure is selected, remember to update the stride
  * property of the proc. (stride += BIG_STRIDE / priority)
  *
- * hint: see libs/skew_heap.h for routines of the priority
+ * hint: see proj13.1/libs/skew_heap.h for routines of the priority
  * queue structures.
  */
 static struct proc_struct *
 stride_pick_next(struct run_queue *rq) {
-     /* LAB6: YOUR CODE 
-      * (1) get a  proc_struct pointer p  with the minimum value of stride
-             (1.1) If using skew_heap, we can use le2proc get the p from rq->lab6_run_poll
-             (1.2) If using list, we have to search list to find the p with minimum stride value
-      * (2) update p;s stride value: p->lab6_stride
-      * (3) return p
-      */
+     /* LAB6: YOUR CODE */
+#if USE_SKEW_HEAP
+     if (rq->lab6_run_pool == NULL) return NULL;
+     struct proc_struct *p = le2proc(rq->lab6_run_pool, lab6_run_pool);
+#else
+     list_entry_t *le = list_next(&(rq->run_list));
+
+     if (le == &rq->run_list)
+          return NULL;
+     
+     struct proc_struct *p = le2proc(le, run_link);
+     le = list_next(le);
+     while (le != &rq->run_list)
+     {
+          struct proc_struct *q = le2proc(le, run_link);
+          if ((int32_t)(p->lab6_stride - q->lab6_stride) > 0)
+               p = q;
+          le = list_next(le);
+     }
+#endif
+     if (p->lab6_priority == 0)
+          p->lab6_stride += BIG_STRIDE;
+     else p->lab6_stride += BIG_STRIDE / p->lab6_priority;
+     return p;
 }
 
 /*
@@ -121,6 +144,12 @@
 static void
 stride_proc_tick(struct run_queue *rq, struct proc_struct *proc) {
      /* LAB6: YOUR CODE */
+     if (proc->time_slice > 0) {
+          proc->time_slice --;
+     }
+     if (proc->time_slice == 0) {
+          proc->need_resched = 1;
+     }
 }
 
 struct sched_class default_sched_class = {
@@ -131,3 +160,4 @@
      .pick_next = stride_pick_next,
      .proc_tick = stride_proc_tick,
 };
+
diff -r -u -P ../../origin/labcodes/lab7/kern/sync/monitor.c lab7/kern/sync/monitor.c
--- ../../origin/labcodes/lab7/kern/sync/monitor.c	2020-05-28 10:03:30.650537000 +0800
+++ lab7/kern/sync/monitor.c	2020-05-28 21:49:56.511298032 +0800
@@ -37,6 +37,12 @@
    *          }
    *       }
    */
+    if(cvp->count>0) {
+        cvp->owner->next_count ++;
+        up(&(cvp->sem));
+        down(&(cvp->owner->next));
+        cvp->owner->next_count --;
+    }
    cprintf("cond_signal end: cvp %x, cvp->count %d, cvp->owner->next_count %d\n", cvp, cvp->count, cvp->owner->next_count);
 }
 
@@ -55,5 +61,12 @@
     *         wait(cv.sem);
     *         cv.count --;
     */
+    cvp->count++;
+    if(cvp->owner->next_count > 0)
+        up(&(cvp->owner->next));
+    else
+        up(&(cvp->owner->mutex));
+    down(&(cvp->sem));
+    cvp->count --;
     cprintf("cond_wait end:  cvp %x, cvp->count %d, cvp->owner->next_count %d\n", cvp, cvp->count, cvp->owner->next_count);
 }
diff -r -u -P ../../origin/labcodes/lab7/kern/trap/trap.c lab7/kern/trap/trap.c
--- ../../origin/labcodes/lab7/kern/trap/trap.c	2020-05-28 10:03:30.654539000 +0800
+++ lab7/kern/trap/trap.c	2020-05-28 20:46:59.731298032 +0800
@@ -57,6 +57,13 @@
      /* LAB5 YOUR CODE */ 
      //you should update your lab1 code (just add ONE or TWO lines of code), let user app to use syscall to get the service of ucore
      //so you should setup the syscall interrupt gate in here
+    extern uintptr_t __vectors[];
+    int i;
+    for (i = 0; i < sizeof(idt) / sizeof(struct gatedesc); i ++) {
+        SETGATE(idt[i], 0, GD_KTEXT, __vectors[i], DPL_KERNEL);
+    }
+    SETGATE(idt[T_SYSCALL], 1, GD_KTEXT, __vectors[T_SYSCALL], DPL_USER);
+    lidt(&idt_pd);
 }
 
 static const char *
@@ -234,6 +241,9 @@
          * IMPORTANT FUNCTIONS:
 	     * run_timer_list
          */
+        ticks ++;
+        assert(current != NULL);
+        run_timer_list();
         break;
     case IRQ_OFFSET + IRQ_COM1:
         c = cons_getc();
diff -r -u -P ../../origin/labcodes/lab7/.matrix.log lab7/.matrix.log
--- ../../origin/labcodes/lab7/.matrix.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.matrix.log	2020-05-28 23:48:52.463298032 +0800
@@ -0,0 +1,254 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "matrix".
+fork ok.
+pid 13 is running (1000 times)!.
+pid 13 done!.
+pid 15 is running (1100 times)!.
+pid 15 done!.
+pid 17 is running (4600 times)!.
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+Iter 1, No.1 philosopher_condvar is eating
+Iter 1, No.2 philosopher_condvar is eating
+Iter 1, No.3 philosopher_condvar is eating
+Iter 1, No.4 philosopher_condvar is eating
+pid 14 is running (1000 times)!.
+pid 14 done!.
+pid 19 is running (20600 times)!.
+pid 21 is running (2600 times)!.
+pid 23 is running (37100 times)!.
+pid 25 is running (23500 times)!.
+pid 27 is running (23500 times)!.
+pid 29 is running (33400 times)!.
+pid 31 is running (2600 times)!.
+pid 16 is running (1900 times)!.
+ppid 32 is running (26600 times)!.
+pid 18 is running (11000 times)!.
+pid 20 is running (37100 times)!.
+pid 22 is running (13100 times)!.
+pid 24 is running (4600 times)!.
+pid 26 is running (2600 times)!.
+pid 28 is running (4600 times)!.
+pid 30 is running (13100 times)!.
+pid 33 is running (13100 times)!.
+pid 31 done!.
+pid 21 done!.
+id 16 done!.
+Iter 2, No.1 philosopher_condvar is thinking
+pid 26 done!.
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.4 philosopher_sema is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+Iter 2, No.3 philosopher_condvar is eating
+pid 17 done!.
+pid 28 done!.
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.0 philosopher_condvar is eating
+Iter 2, No.2 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is eating
+Iter 2, No.1 philosopher_condvar is eating
+Iter 3, No.2 philosopher_condvar is thinking
+pid 24 done!.
+Iter 3, No.2 philosopher_sema is thinking
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is thinking
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 3, No.2 philosopher_condvar is eating
+Iter 2, No.1 philosopher_sema is eating
+Iter 3, No.0 philosopher_condvar is eating
+Iter 3, No.1 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+Iter 3, No.4 philosopher_sema is thinking
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_condvar is thinking
+pid 18 done!.
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is eating
+Iter 4, No.0 philosopher_condvar is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 4, No.3 philosopher_condvar is eating
+Iter 4, No.2 philosopher_condvar is eating
+Iter 4, No.1 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is eating
+pid 30 done!.
+pid 22 done!.
+pid 33 done!.
+Iter 2, No.3 philosopher_sema is eating
+No.4 philosopher_condvar quit
+No.3 philosopher_condvar quit
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is eating
+No.1 philosopher_condvar quit
+No.0 philosopher_condvar quit
+No.2 philosopher_condvar quit
+Iter 3, No.3 philosopher_sema is thinking
+No.0 philosopher_sema quit
+Iter 3, No.4 philosopher_sema is eating
+Iter 4, No.4 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+No.2 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is eating
+No.1 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+No.4 philosopher_sema quit
+pipid 19 done!.
+Iter 4, No.3 philosopher_sema is eating
+d 27 done!.
+pid 25 done!.
+No.3 philosopher_sema quit
+pid 32 done!.
+pid 29 done!.
+pid 23 done!.
+pid 20 done!.
+matrix pass.
+all user-mode processes have quit.
+init check memory pass.
+kernel panic at kern/process/proc.c:482:
+    initproc exit.
+
+stack trackback:
+ebp:0xc03aaf88 eip:0xc0100af0 args:0xc010d9e4 0xc03aafcc 0x000001e2 0xc03aafb8 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03aafb8 eip:0xc0100e50 args:0xc010fc64 0x000001e2 0xc010fc88 0x00000000 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03aafe8 eip:0xc010af18 args:0x00000000 0x00000000 0x00000000 0x00000010 
+    kern/process/proc.c:482: do_exit+91
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P ../../origin/labcodes/lab7/.pgdir.log lab7/.pgdir.log
--- ../../origin/labcodes/lab7/.pgdir.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.pgdir.log	2020-05-28 23:47:49.207298032 +0800
@@ -0,0 +1,228 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "pgdir".
+I am 2, print pgdir.
+-------------------- BEGIN --------------------
+PDE(001) 00000000-00400000 00400000 urw
+  |-- PTE(00004) 00200000-00204000 00004000 urw
+PDE(001) 00800000-00c00000 00400000 urw
+  |-- PTE(00002) 00800000-00802000 00002000 ur-
+  |-- PTE(00001) 00802000-00803000 00001000 urw
+PDE(001) afc00000-b0000000 00400000 urw
+  |-- PTE(00004) afffc000-b0000000 00004000 urw
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(00001) fac00000-fac01000 00001000 urw
+  |-- PTE(00001) fac02000-fac03000 00001000 urw
+  |-- PTE(00001) faebf000-faec0000 00001000 urw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+pgdir pass.
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+Iter 1, No.1 philosopher_condvar is eating
+Iter 1, No.2 philosopher_condvar is eating
+Iter 1, No.3 philosopher_condvar is eating
+Iter 1, No.4 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.4 philosopher_sema is thinking
+Iter 1, No.0 philosopher_sema is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+Iter 2, No.0 philosopher_condvar is eating
+Iter 2, No.1 philosopher_condvar is eating
+Iter 2, No.2 philosopher_condvar is eating
+Iter 2, No.3 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 3, No.2 philosopher_condvar is eating
+Iter 3, No.1 philosopher_condvar is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 3, No.3 philosopher_sema is thinking
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is eating
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+Iter 4, No.2 philosopher_condvar is eating
+Iter 4, No.1 philosopher_condvar is eating
+Iter 4, No.0 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.3 philosopher_condvar is eating
+Iter 4, No.4 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+No.3 philosopher_condvar quit
+No.4 philosopher_condvar quit
+No.0 philosopher_condvar quit
+No.1 philosopher_condvar quit
+No.2 philosopher_condvar quit
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 4, No.3 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+No.4 philosopher_sema quit
+Iter 4, No.0 philosopher_sema is eating
+No.2 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+No.3 philosopher_sema quit
+No.1 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+kernel panic at kern/process/proc.c:482:
+    initproc exit.
+
+stack trackback:
+ebp:0xc03aaf88 eip:0xc0100af0 args:0xc010d9e4 0xc03aafcc 0x000001e2 0xc03aafb8 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03aafb8 eip:0xc0100e50 args:0xc010fc64 0x000001e2 0xc010fc88 0x00000000 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03aafe8 eip:0xc010af18 args:0x00000000 0x00000000 0x00000000 0x00000010 
+    kern/process/proc.c:482: do_exit+91
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
diff -r -u -P ../../origin/labcodes/lab7/.priority.log lab7/.priority.log
--- ../../origin/labcodes/lab7/.priority.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.priority.log	2020-05-28 23:48:28.631298032 +0800
@@ -0,0 +1,224 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "priority".
+priority process will sleep 400 ticks
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+Iter 1, No.1 philosopher_condvar is eating
+Iter 1, No.2 philosopher_condvar is eating
+Iter 1, No.3 philosopher_condvar is eating
+Iter 1, No.4 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.4 philosopher_sema is thinking
+Iter 1, No.0 philosopher_sema is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+Iter 2, No.0 philosopher_condvar is eating
+Iter 2, No.1 philosopher_condvar is eating
+Iter 2, No.2 philosopher_condvar is eating
+Iter 2, No.3 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 3, No.4 philosopher_sema is eating
+Iter 3, No.0 philosopher_condvar is eating
+Iter 3, No.1 philosopher_condvar is eating
+Iter 3, No.2 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+Iter 4, No.3 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+Iter 4, No.0 philosopher_condvar is eating
+Iter 4, No.1 philosopher_condvar is eating
+Iter 4, No.2 philosopher_condvar is eating
+Iter 4, No.3 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is eating
+No.4 philosopher_condvar quit
+No.3 philosopher_condvar quit
+No.2 philosopher_condvar quit
+No.1 philosopher_condvar quit
+No.0 philosopher_condvar quit
+No.4 philosopher_sema quit
+Iter 4, No.0 philosopher_sema is eating
+No.2 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.3 philosopher_sema quit
+No.0 philosopher_sema quit
+Iter 1, No.1 philosopher_sema is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.1 philosopher_sema is eating
+No.1 philosopher_sema quit
+main: fork ok,now need to wait pids.
+child pid 17, acc 2888000, time 1401
+child pid 16, acc 2292000, time 1401
+child pid 15, acc 1752000, time 1402
+child pid 14, acc 1172000, time 1402
+child pid 13, acc 616000, time 1403
+main: pid 13, acc 616000, time 1403
+main: pid 14, acc 1172000, time 1403
+main: pid 15, acc 1752000, time 1403
+main: pid 16, acc 2292000, time 1403
+main: pid 17, acc 2888000, time 1403
+main: wait pids over
+stride sched correct result: 1 2 3 4 5
+all user-mode processes have quit.
+init check memory pass.
+kernel panic at kern/process/proc.c:482:
+    initproc exit.
+
+stack trackback:
+ebp:0xc03aaf88 eip:0xc0100af0 args:0xc010d9e4 0xc03aafcc 0x000001e2 0xc03aafb8 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03aafb8 eip:0xc0100e50 args:0xc010fc64 0x000001e2 0xc010fc88 0x00000000 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03aafe8 eip:0xc010af18 args:0x00000000 0x00000000 0x00000000 0x00000010 
+    kern/process/proc.c:482: do_exit+91
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
diff -r -u -P ../../origin/labcodes/lab7/.sleepkill.log lab7/.sleepkill.log
--- ../../origin/labcodes/lab7/.sleepkill.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.sleepkill.log	2020-05-28 23:48:43.471298032 +0800
@@ -0,0 +1,210 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "sleepkill".
+Iter 1, No.4 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+Iter 1, No.1 philosopher_condvar is eating
+Iter 1, No.2 philosopher_condvar is eating
+Iter 1, No.3 philosopher_condvar is eating
+Iter 1, No.4 philosopher_condvar is eating
+Iter 1, No.1 philosopher_sema is eating
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.4 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 1, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 1, No.2 philosopher_sema is eating
+Iter 2, No.0 philosopher_condvar is eating
+Iter 2, No.1 philosopher_condvar is eating
+Iter 2, No.2 philosopher_condvar is eating
+Iter 2, No.3 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.2 philosopher_condvar is eating
+Iter 3, No.1 philosopher_condvar is eating
+Iter 3, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 3, No.0 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_sema is thinking
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 4, No.2 philosopher_condvar is eating
+Iter 4, No.1 philosopher_condvar is eating
+Iter 4, No.0 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.3 philosopher_condvar is eating
+Iter 4, No.4 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+Iter 4, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+No.3 philosopher_condvar quit
+No.4 philosopher_condvar quit
+No.0 philosopher_condvar quit
+No.1 philosopher_condvar quit
+No.2 philosopher_condvar quit
+Iter 4, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+Iter 4, No.2 philosopher_sema is thinking
+Iter 4, No.1 philosopher_sema is eating
+No.4 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.1 philosopher_sema quit
+Iter 4, No.0 philosopher_sema is eating
+sleepkill pass.
+No.3 philosopher_sema quit
+Iter 4, No.2 philosopher_sema is eating
+No.0 philosopher_sema quit
+No.2 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+kernel panic at kern/process/proc.c:482:
+    initproc exit.
+
+stack trackback:
+ebp:0xc03aaf88 eip:0xc0100af0 args:0xc010d9e4 0xc03aafcc 0x000001e2 0xc03aafb8 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03aafb8 eip:0xc0100e50 args:0xc010fc64 0x000001e2 0xc010fc88 0x00000000 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03aafe8 eip:0xc010af18 args:0x00000000 0x00000000 0x00000000 0x00000010 
+    kern/process/proc.c:482: do_exit+91
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
diff -r -u -P ../../origin/labcodes/lab7/.sleep.log lab7/.sleep.log
--- ../../origin/labcodes/lab7/.sleep.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.sleep.log	2020-05-28 23:48:40.551298032 +0800
@@ -0,0 +1,221 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "sleep".
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+Iter 1, No.1 philosopher_condvar is eating
+Iter 1, No.2 philosopher_condvar is eating
+Iter 1, No.3 philosopher_condvar is eating
+Iter 1, No.4 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.4 philosopher_sema is thinking
+Iter 1, No.0 philosopher_sema is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+Iter 2, No.0 philosopher_condvar is eating
+Iter 2, No.1 philosopher_condvar is eating
+Iter 2, No.2 philosopher_condvar is eating
+Iter 2, No.3 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+Iter 3, No.0 philosopher_condvar is eating
+Iter 3, No.1 philosopher_condvar is eating
+Iter 3, No.2 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.4 philosopher_sema is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_condvar is thinking
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 4, No.2 philosopher_condvar is eating
+Iter 4, No.1 philosopher_condvar is eating
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+Iter 4, No.0 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.3 philosopher_condvar is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+No.3 philosopher_condvar quit
+No.4 philosopher_condvar quit
+No.0 philosopher_condvar quit
+Iter 4, No.3 philosopher_sema is thinking
+No.1 philosopher_condvar quit
+No.2 philosopher_condvar quit
+Iter 4, No.4 philosopher_sema is eating
+Iter 3, No.1 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+No.4 philosopher_sema quit
+Iter 4, No.0 philosopher_sema is eating
+No.2 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.0 philosopher_sema quit
+Iter 3, No.1 philosopher_sema is eating
+No.3 philosopher_sema quit
+sleep 1 x 100 slices.
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.1 philosopher_sema is eating
+No.1 philosopher_sema quit
+sleep 2 x 100 slices.
+sleep 3 x 100 slices.
+sleep 4 x 100 slices.
+sleep 5 x 100 slices.
+sleep 6 x 100 slices.
+sleep 7 x 100 slices.
+sleep 8 x 100 slices.
+sleep 9 x 100 slices.
+sleep 10 x 100 slices.
+use 1001 msecs.
+sleep pass.
+all user-mode processes have quit.
+init check memory pass.
+kernel panic at kern/process/proc.c:482:
+    initproc exit.
+
+stack trackback:
+ebp:0xc03aaf88 eip:0xc0100af0 args:0xc010d9e4 0xc03aafcc 0x000001e2 0xc03aafb8 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03aafb8 eip:0xc0100e50 args:0xc010fc64 0x000001e2 0xc010fc88 0x00000000 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03aafe8 eip:0xc010af18 args:0x00000000 0x00000000 0x00000000 0x00000010 
+    kern/process/proc.c:482: do_exit+91
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
diff -r -u -P ../../origin/labcodes/lab7/.softint.log lab7/.softint.log
--- ../../origin/labcodes/lab7/.softint.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.softint.log	2020-05-28 23:47:37.339298032 +0800
@@ -0,0 +1,230 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "softint".
+trapframe at 0xc03b1fb4
+  edi  0x00000000
+  esi  0x00000000
+  ebp  0xafffffa8
+  oesp 0xc03b1fd4
+  ebx  0x00000000
+  edx  0x00000000
+  ecx  0x00000000
+  eax  0x00000000
+  ds   0x----0023
+  es   0x----0023
+  fs   0x----0000
+  gs   0x----0000
+  trap 0x0000000d General Protection
+  err  0x00000072
+  eip  0x00801017
+  cs   0x----001b
+  flag 0x00000286 PF,SF,IF,IOPL=0
+  esp  0xafffff90
+  ss   0x----0023
+unhandled trap.
+Iter 1, No.0 philosopher_condvar is eating
+Iter 1, No.1 philosopher_condvar is eating
+Iter 1, No.2 philosopher_condvar is eating
+Iter 1, No.3 philosopher_condvar is eating
+Iter 1, No.4 philosopher_condvar is eating
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+Iter 2, No.0 philosopher_condvar is eating
+Iter 2, No.1 philosopher_condvar is eating
+Iter 2, No.2 philosopher_condvar is eating
+Iter 2, No.3 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+Iter 3, No.0 philosopher_condvar is eating
+Iter 3, No.1 philosopher_condvar is eating
+Iter 3, No.2 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is eating
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 4, No.0 philosopher_condvar is eating
+Iter 4, No.1 philosopher_condvar is eating
+Iter 4, No.2 philosopher_condvar is eating
+Iter 4, No.3 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is eating
+Iter 4, No.3 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+No.4 philosopher_condvar quit
+No.3 philosopher_condvar quit
+No.2 philosopher_condvar quit
+No.1 philosopher_condvar quit
+No.0 philosopher_condvar quit
+No.2 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+No.1 philosopher_sema quit
+No.3 philosopher_sema quit
+Iter 1, No.4 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+Iter 3, No.4 philosopher_sema is thinking
+Iter 3, No.4 philosopher_sema is eating
+Iter 4, No.4 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+kernel panic at kern/process/proc.c:482:
+    initproc exit.
+
+stack trackback:
+ebp:0xc03aaf88 eip:0xc0100af0 args:0xc010d9e4 0xc03aafcc 0x000001e2 0xc03aafb8 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03aafb8 eip:0xc0100e50 args:0xc010fc64 0x000001e2 0xc010fc88 0x00000000 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03aafe8 eip:0xc010af18 args:0x00000000 0x00000000 0x00000000 0x00000010 
+    kern/process/proc.c:482: do_exit+91
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
diff -r -u -P ../../origin/labcodes/lab7/.spin.log lab7/.spin.log
--- ../../origin/labcodes/lab7/.spin.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.spin.log	2020-05-28 23:48:01.947298032 +0800
@@ -0,0 +1,216 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "spin".
+I am the parent. Forking the child...
+I am the parent. Running the child...
+I am the child. spinning ...
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+Iter 1, No.1 philosopher_condvar is eating
+Iter 1, No.2 philosopher_condvar is eating
+Iter 1, No.3 philosopher_condvar is eating
+Iter 1, No.4 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+I am the parent.  Killing the child...
+kill returns 0
+wait returns 0
+spin may pass.
+Iter 2, No.3 philosopher_sema is thinking
+Iter 1, No.4 philosopher_sema is eating
+Iter 2, No.0 philosopher_condvar is eating
+Iter 2, No.1 philosopher_condvar is eating
+Iter 2, No.2 philosopher_condvar is eating
+Iter 2, No.3 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.2 philosopher_condvar is eating
+Iter 3, No.1 philosopher_condvar is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+Iter 3, No.0 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_sema is thinking
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_sema is eating
+Iter 3, No.4 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 4, No.2 philosopher_condvar is eating
+Iter 4, No.1 philosopher_condvar is eating
+Iter 4, No.0 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is eating
+Iter 4, No.3 philosopher_condvar is eating
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+No.3 philosopher_condvar quit
+No.4 philosopher_condvar quit
+No.0 philosopher_condvar quit
+No.1 philosopher_condvar quit
+No.2 philosopher_condvar quit
+Iter 4, No.3 philosopher_sema is thinking
+Iter 3, No.4 philosopher_sema is eating
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 4, No.4 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is eating
+No.2 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+No.3 philosopher_sema quit
+Iter 4, No.4 philosopher_sema is eating
+No.1 philosopher_sema quit
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+kernel panic at kern/process/proc.c:482:
+    initproc exit.
+
+stack trackback:
+ebp:0xc03aaf88 eip:0xc0100af0 args:0xc010d9e4 0xc03aafcc 0x000001e2 0xc03aafb8 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03aafb8 eip:0xc0100e50 args:0xc010fc64 0x000001e2 0xc010fc88 0x00000000 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03aafe8 eip:0xc010af18 args:0x00000000 0x00000000 0x00000000 0x00000010 
+    kern/process/proc.c:482: do_exit+91
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
diff -r -u -P ../../origin/labcodes/lab7/.testbss.log lab7/.testbss.log
--- ../../origin/labcodes/lab7/.testbss.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.testbss.log	2020-05-28 23:47:46.323298032 +0800
@@ -0,0 +1,158 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "testbss".
+Making sure bss works right...
+Yes, good.  Now doing a wild write off the end...
+testbss may pass.
+not valid addr c03020, and  can not find it in vma
+trapframe at 0xc03b1fb4
+  edi  0x00000000
+  esi  0x00000000
+  ebp  0xafffffa8
+  oesp 0xc03b1fd4
+  ebx  0x00000000
+  edx  0x008014da
+  ecx  0xaffffec8
+  eax  0x00000012
+  ds   0x----0023
+  es   0x----0023
+  fs   0x----0000
+  gs   0x----0000
+  trap 0x0000000e Page Fault
+  err  0x00000006
+  eip  0x008010ff
+  cs   0x----001b
+  flag 0x00000282 SF,IF,IOPL=0
+  esp  0xafffff80
+  ss   0x----0023
+killed by kernel.
+kernel panic at kern/trap/trap.c:211:
+    handle user mode pgfault failed. ret=-3
+
+stack trackback:
+ebp:0xc03b1f18 eip:0xc0100af0 args:0xc010d9e4 0xc03b1f5c 0x000000d3 0x008000d6 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03b1f48 eip:0xc0100e50 args:0xc010db8e 0x000000d3 0xc010de30 0xfffffffd 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03b1f78 eip:0xc01028f4 args:0xc03b1fb4 0x00000000 0x00800020 0x0000001b 
+    kern/trap/trap.c:211: trap_dispatch+289
+ebp:0xc03b1fa8 eip:0xc0102a48 args:0xc03b1fb4 0x00000000 0x00000000 0xafffffa8 
+    kern/trap/trap.c:296: trap+74
+ebp:0xafffffa8 eip:0xc0102a9d args:0x00000000 0x00000000 0x00000000 0x00000000 
+    kern/trap/trapentry.S:24: <unknown>+0
+ebp:0xafffffd8 eip:0x008003ca args:0x00000000 0x00000000 0x00000000 0x00000000 
+    user/libs/umain.c:7: umain+10
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
diff -r -u -P ../../origin/labcodes/lab7/.waitkill.log lab7/.waitkill.log
--- ../../origin/labcodes/lab7/.waitkill.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.waitkill.log	2020-05-28 23:48:05.923298032 +0800
@@ -0,0 +1,214 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "waitkill".
+wait child 1.
+child 2.
+child 1.
+Iter 1, No.0 philosopher_sema is eating
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+Iter 1, No.1 philosopher_condvar is eating
+Iter 1, No.2 philosopher_condvar is eating
+Iter 1, No.3 philosopher_condvar is eating
+Iter 1, No.4 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 1, No.1 philosopher_sema is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+Iter 2, No.0 philosopher_condvar is eating
+Iter 2, No.1 philosopher_condvar is eating
+Iter 2, No.2 philosopher_condvar is eating
+Iter 2, No.3 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+Iter 3, No.0 philosopher_condvar is eating
+Iter 3, No.1 philosopher_condvar is eating
+Iter 3, No.2 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is eating
+kill parent ok.
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.0 philosopher_sema is eating
+Iter 4, No.3 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 4, No.0 philosopher_condvar is eating
+Iter 4, No.1 philosopher_condvar is eating
+Iter 4, No.2 philosopher_condvar is eating
+Iter 4, No.3 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is eating
+No.4 philosopher_condvar quit
+No.3 philosopher_condvar quit
+No.2 philosopher_condvar quit
+No.1 philosopher_condvar quit
+No.0 philosopher_condvar quit
+No.2 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.0 philosopher_sema quit
+Iter 4, No.1 philosopher_sema is eating
+No.1 philosopher_sema quit
+No.3 philosopher_sema quit
+Iter 1, No.4 philosopher_sema is eating
+Iter 2, No.4 philosopher_sema is thinking
+kill child1 ok.
+Iter 2, No.4 philosopher_sema is eating
+Iter 3, No.4 philosopher_sema is thinking
+Iter 3, No.4 philosopher_sema is eating
+Iter 4, No.4 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+No.4 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+kernel panic at kern/process/proc.c:482:
+    initproc exit.
+
+stack trackback:
+ebp:0xc03aaf88 eip:0xc0100af0 args:0xc010d9e4 0xc03aafcc 0x000001e2 0xc03aafb8 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03aafb8 eip:0xc0100e50 args:0xc010fc64 0x000001e2 0xc010fc88 0x00000000 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03aafe8 eip:0xc010af18 args:0x00000000 0x00000000 0x00000000 0x00000010 
+    kern/process/proc.c:482: do_exit+91
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
diff -r -u -P ../../origin/labcodes/lab7/.yield.log lab7/.yield.log
--- ../../origin/labcodes/lab7/.yield.log	1970-01-01 08:00:00.000000000 +0800
+++ lab7/.yield.log	2020-05-28 23:47:52.619298032 +0800
@@ -0,0 +1,218 @@
+(THU.CST) os is loading ...
+
+Special kernel symbols:
+  entry  0xc0100036 (phys)
+  etext  0xc010d6ec (phys)
+  edata  0xc01c5000 (phys)
+  end    0xc01c82c4 (phys)
+Kernel executable memory footprint: 801KB
+ebp:0xc0130f38 eip:0xc0100af0 args:0x00010094 0x00000000 0xc0130f68 0xc01000e4 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc0130f48 eip:0xc0100ddf args:0x00000000 0x00000000 0x00000000 0xc0130fb8 
+    kern/debug/kmonitor.c:129: mon_backtrace+10
+ebp:0xc0130f68 eip:0xc01000e4 args:0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
+    kern/init/init.c:59: grade_backtrace2+33
+ebp:0xc0130f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
+    kern/init/init.c:64: grade_backtrace1+38
+ebp:0xc0130fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
+    kern/init/init.c:69: grade_backtrace0+23
+ebp:0xc0130fc8 eip:0xc0100150 args:0xc010d71c 0xc010d700 0x000032c4 0x00000000 
+    kern/init/init.c:74: grade_backtrace+34
+ebp:0xc0130ff8 eip:0xc010008b args:0xc010d8b0 0xc010d8b8 0xc0100d65 0xc010d8d7 
+    kern/init/init.c:33: kern_init+84
+memory management: default_pmm_manager
+e820map:
+  memory: 0009fc00, [00000000, 0009fbff], type = 1.
+  memory: 00000400, [0009fc00, 0009ffff], type = 2.
+  memory: 00010000, [000f0000, 000fffff], type = 2.
+  memory: 07efe000, [00100000, 07ffdfff], type = 1.
+  memory: 00002000, [07ffe000, 07ffffff], type = 2.
+  memory: 00040000, [fffc0000, ffffffff], type = 2.
+check_alloc_page() succeeded!
+check_pgdir() succeeded!
+check_boot_pgdir() succeeded!
+-------------------- BEGIN --------------------
+PDE(0e0) c0000000-f8000000 38000000 urw
+  |-- PTE(38000) c0000000-f8000000 38000000 -rw
+PDE(001) fac00000-fb000000 00400000 -rw
+  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
+  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
+--------------------- END ---------------------
+use SLOB allocator
+kmalloc_init() succeeded!
+check_vma_struct() succeeded!
+page fault at 0x00000100: K/W [no page found].
+check_pgfault() succeeded!
+check_vmm() succeeded.
+sched class: stride_scheduler
+ide 0:      10000(sectors), 'QEMU HARDDISK'.
+ide 1:     262144(sectors), 'QEMU HARDDISK'.
+SWAP: manager = fifo swap manager
+BEGIN check_swap: count 1, total 31827
+setup Page Table for vaddr 0X1000, so alloc a page
+setup Page Table vaddr 0~4MB OVER!
+set up init env for check_swap begin!
+page fault at 0x00001000: K/W [no page found].
+page fault at 0x00002000: K/W [no page found].
+page fault at 0x00003000: K/W [no page found].
+page fault at 0x00004000: K/W [no page found].
+set up init env for check_swap over!
+write Virt Page c in fifo_check_swap
+write Virt Page a in fifo_check_swap
+write Virt Page d in fifo_check_swap
+write Virt Page b in fifo_check_swap
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+write Virt Page b in fifo_check_swap
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+write Virt Page b in fifo_check_swap
+page fault at 0x00002000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
+swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
+write Virt Page c in fifo_check_swap
+page fault at 0x00003000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
+swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
+write Virt Page d in fifo_check_swap
+page fault at 0x00004000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
+swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
+write Virt Page e in fifo_check_swap
+page fault at 0x00005000: K/W [no page found].
+swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
+swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
+write Virt Page a in fifo_check_swap
+page fault at 0x00001000: K/R [no page found].
+swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
+swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
+count is 0, total is 5
+check_swap() succeeded!
+++ setup timer interrupts
+I am No.4 philosopher_condvar
+Iter 1, No.4 philosopher_condvar is thinking
+I am No.3 philosopher_condvar
+Iter 1, No.3 philosopher_condvar is thinking
+I am No.2 philosopher_condvar
+Iter 1, No.2 philosopher_condvar is thinking
+I am No.1 philosopher_condvar
+Iter 1, No.1 philosopher_condvar is thinking
+I am No.0 philosopher_condvar
+Iter 1, No.0 philosopher_condvar is thinking
+I am No.4 philosopher_sema
+Iter 1, No.4 philosopher_sema is thinking
+I am No.3 philosopher_sema
+Iter 1, No.3 philosopher_sema is thinking
+I am No.2 philosopher_sema
+Iter 1, No.2 philosopher_sema is thinking
+I am No.1 philosopher_sema
+Iter 1, No.1 philosopher_sema is thinking
+I am No.0 philosopher_sema
+Iter 1, No.0 philosopher_sema is thinking
+kernel_execve: pid = 2, name = "yield".
+Hello, I am process 2.
+Back in process 2, iteration 0.
+Back in process 2, iteration 1.
+Back in process 2, iteration 2.
+Back in process 2, iteration 3.
+Back in process 2, iteration 4.
+All done in process 2.
+yield pass.
+Iter 1, No.2 philosopher_sema is eating
+Iter 1, No.4 philosopher_sema is eating
+Iter 1, No.0 philosopher_condvar is eating
+Iter 1, No.1 philosopher_condvar is eating
+Iter 1, No.2 philosopher_condvar is eating
+Iter 1, No.3 philosopher_condvar is eating
+Iter 1, No.4 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is thinking
+Iter 2, No.3 philosopher_condvar is thinking
+Iter 2, No.2 philosopher_condvar is thinking
+Iter 2, No.1 philosopher_condvar is thinking
+Iter 2, No.0 philosopher_condvar is thinking
+Iter 2, No.4 philosopher_sema is thinking
+Iter 1, No.0 philosopher_sema is eating
+Iter 2, No.2 philosopher_sema is thinking
+Iter 1, No.3 philosopher_sema is eating
+Iter 2, No.3 philosopher_sema is thinking
+Iter 2, No.2 philosopher_sema is eating
+Iter 2, No.0 philosopher_sema is thinking
+Iter 2, No.4 philosopher_sema is eating
+Iter 2, No.0 philosopher_condvar is eating
+Iter 2, No.1 philosopher_condvar is eating
+Iter 2, No.2 philosopher_condvar is eating
+Iter 2, No.3 philosopher_condvar is eating
+Iter 2, No.4 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is thinking
+Iter 3, No.3 philosopher_condvar is thinking
+Iter 3, No.2 philosopher_condvar is thinking
+Iter 3, No.1 philosopher_condvar is thinking
+Iter 3, No.0 philosopher_condvar is thinking
+Iter 3, No.4 philosopher_sema is thinking
+Iter 2, No.0 philosopher_sema is eating
+Iter 3, No.2 philosopher_sema is thinking
+Iter 2, No.3 philosopher_sema is eating
+Iter 3, No.3 philosopher_sema is thinking
+Iter 3, No.2 philosopher_sema is eating
+Iter 3, No.0 philosopher_sema is thinking
+Iter 3, No.4 philosopher_sema is eating
+Iter 3, No.0 philosopher_condvar is eating
+Iter 3, No.1 philosopher_condvar is eating
+Iter 3, No.2 philosopher_condvar is eating
+Iter 3, No.3 philosopher_condvar is eating
+Iter 3, No.4 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is thinking
+Iter 4, No.3 philosopher_condvar is thinking
+Iter 4, No.2 philosopher_condvar is thinking
+Iter 4, No.1 philosopher_condvar is thinking
+Iter 4, No.0 philosopher_condvar is thinking
+Iter 4, No.4 philosopher_sema is thinking
+Iter 3, No.0 philosopher_sema is eating
+Iter 4, No.2 philosopher_sema is thinking
+Iter 3, No.3 philosopher_sema is eating
+Iter 4, No.3 philosopher_sema is thinking
+Iter 4, No.2 philosopher_sema is eating
+Iter 4, No.0 philosopher_sema is thinking
+Iter 4, No.4 philosopher_sema is eating
+Iter 4, No.0 philosopher_condvar is eating
+Iter 4, No.1 philosopher_condvar is eating
+Iter 4, No.2 philosopher_condvar is eating
+Iter 4, No.3 philosopher_condvar is eating
+Iter 4, No.4 philosopher_condvar is eating
+No.4 philosopher_condvar quit
+No.3 philosopher_condvar quit
+No.2 philosopher_condvar quit
+No.1 philosopher_condvar quit
+No.0 philosopher_condvar quit
+No.4 philosopher_sema quit
+Iter 4, No.0 philosopher_sema is eating
+No.2 philosopher_sema quit
+Iter 4, No.3 philosopher_sema is eating
+No.3 philosopher_sema quit
+No.0 philosopher_sema quit
+Iter 1, No.1 philosopher_sema is eating
+Iter 2, No.1 philosopher_sema is thinking
+Iter 2, No.1 philosopher_sema is eating
+Iter 3, No.1 philosopher_sema is thinking
+Iter 3, No.1 philosopher_sema is eating
+Iter 4, No.1 philosopher_sema is thinking
+Iter 4, No.1 philosopher_sema is eating
+No.1 philosopher_sema quit
+all user-mode processes have quit.
+init check memory pass.
+kernel panic at kern/process/proc.c:482:
+    initproc exit.
+
+stack trackback:
+ebp:0xc03aaf88 eip:0xc0100af0 args:0xc010d9e4 0xc03aafcc 0x000001e2 0xc03aafb8 
+    kern/debug/kdebug.c:350: print_stackframe+21
+ebp:0xc03aafb8 eip:0xc0100e50 args:0xc010fc64 0x000001e2 0xc010fc88 0x00000000 
+    kern/debug/panic.c:27: __panic+105
+ebp:0xc03aafe8 eip:0xc010af18 args:0x00000000 0x00000000 0x00000000 0x00000010 
+    kern/process/proc.c:482: do_exit+91
+Welcome to the kernel debug monitor!!
+Type 'help' for a list of commands.
+K> 
\ No newline at end of file
